import React from 'react';
import FontIcon from 'material-ui/FontIcon';
import Toggle from 'material-ui/Toggle';
import locales from './locales';
import { themes } from './themes';

var getMenuItems = function getMenuItems(props) {
  var responsiveDrawer = props.responsiveDrawer,
      setResponsive = props.setResponsive,
      theme = props.theme,
      locale = props.locale,
      updateTheme = props.updateTheme,
      updateLocale = props.updateLocale,
      intl = props.intl,
      muiTheme = props.muiTheme,
      auth = props.auth,
      isGranted = props.isGranted;


  var isAuthorised = auth.isAuthorised;

  var themeItems = themes.map(function (t) {
    return {
      value: undefined,
      visible: true,
      primaryText: intl.formatMessage({ id: t.id }),
      onClick: function onClick() {
        updateTheme(t.id);
      },
      rightIcon: React.createElement(
        FontIcon,
        {
          className: 'material-icons',
          color: t.id === theme ? muiTheme.palette.primary1Color : undefined },
        'style'
      )
    };
  });

  var localeItems = locales.map(function (l) {
    return {
      value: undefined,
      visible: true,
      primaryText: intl.formatMessage({ id: l.locale }),
      onClick: function onClick() {
        updateLocale(l.locale);
      },
      rightIcon: React.createElement(
        FontIcon,
        {
          className: 'material-icons',
          color: l.locale === locale ? muiTheme.palette.primary1Color : undefined },
        'language'
      )
    };
  });

  return [{
    visible: isAuthorised,
    primaryText: intl.formatMessage({ id: 'chats' }),
    primaryTogglesNestedList: true,
    leftIcon: React.createElement(
      FontIcon,
      { className: 'material-icons' },
      'chats'
    ),
    nestedItems: [{
      value: '/chats',
      visible: isAuthorised,
      primaryText: intl.formatMessage({ id: 'private' }),
      leftIcon: React.createElement(
        FontIcon,
        { className: 'material-icons' },
        'person'
      )
    }, {
      value: '/public_chats',
      visible: isAuthorised,
      primaryText: intl.formatMessage({ id: 'public' }),
      leftIcon: React.createElement(
        FontIcon,
        { className: 'material-icons' },
        'group'
      )
    }, {
      value: '/predefined_chat_messages',
      visible: isAuthorised,
      primaryText: intl.formatMessage({ id: 'predefined_messages' }),
      leftIcon: React.createElement(
        FontIcon,
        { className: 'material-icons' },
        'textsms'
      )
    }]
  }, {
    visible: isAuthorised, // In prod: isGranted('administration'),
    primaryTogglesNestedList: true,
    primaryText: intl.formatMessage({ id: 'administration' }),
    leftIcon: React.createElement(
      FontIcon,
      { className: 'material-icons' },
      'security'
    ),
    nestedItems: [{
      value: '/users',
      visible: isAuthorised, // In prod: isGranted('read_users'),
      primaryText: intl.formatMessage({ id: 'users' }),
      leftIcon: React.createElement(
        FontIcon,
        { className: 'material-icons' },
        'group'
      )
    }, {
      value: '/roles',
      visible: isGranted('read_roles'),
      primaryText: intl.formatMessage({ id: 'roles' }),
      leftIcon: React.createElement(
        FontIcon,
        { className: 'material-icons' },
        'account_box'
      )
    }]
  }, {
    divider: true,
    visible: isAuthorised
  }, {
    primaryText: intl.formatMessage({ id: 'settings' }),
    primaryTogglesNestedList: true,
    leftIcon: React.createElement(
      FontIcon,
      { className: 'material-icons' },
      'settings'
    ),
    nestedItems: [{
      primaryText: intl.formatMessage({ id: 'theme' }),
      secondaryText: intl.formatMessage({ id: theme }),
      primaryTogglesNestedList: true,
      leftIcon: React.createElement(
        FontIcon,
        { className: 'material-icons' },
        'style'
      ),
      nestedItems: themeItems
    }, {
      primaryText: intl.formatMessage({ id: 'language' }),
      secondaryText: intl.formatMessage({ id: locale }),
      primaryTogglesNestedList: true,
      leftIcon: React.createElement(
        FontIcon,
        { className: 'material-icons' },
        'language'
      ),
      nestedItems: localeItems
    }, {
      primaryText: intl.formatMessage({ id: 'responsive' }),
      leftIcon: React.createElement(
        FontIcon,
        { className: 'material-icons' },
        'chrome_reader_mode'
      ),
      rightToggle: React.createElement(Toggle, {
        toggled: responsiveDrawer.responsive,
        onToggle: function onToggle() {
          setResponsive(!responsiveDrawer.responsive);
        }
      })
    }]
  }];
};

export default getMenuItems;